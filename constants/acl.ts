/* eslint-disable prettier/prettier */


export default function checkAccess(role: string, target: string) {
    const availableTo = _get(ACL, target, [])

    if (_includes(availableTo, role)) {
        return true
    }

    return false
}

export const ROLES = {
    ADMIN: 'admin',
    OWNER: 'owner',
    MODERATOR: 'moderator',
    AGENT: 'agent',
    OBSERVER: 'observer',
}

const ACL = {
    DASHBOARD: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    NET: {
        POST: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    FILES: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        UPLOAD: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    WIDGET: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    MEDIA_CREATION: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    PLUGIN: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    PLAYLIST: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT],
        GET_BY_ID: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT, ROLES.OBSERVER],
        GET_ALL: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT, ROLES.OBSERVER],
        POST: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        REMOVE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        PATCH: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT],
    },
    POINT: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.OBSERVER],
        GET_BY_ID: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        GET_ALL: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        POST: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        REMOVE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        PATCH: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        REQUEST_SCREENSHOT: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        GET_SCREENSHOT: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        RELOAD: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        GET_SCHEDULE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
        ONLINE_STATS: [ROLES.ADMIN, ROLES.OWNER],
        AUDIENCE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    STATISTIC: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT, ROLES.OBSERVER],
        GET_ALL: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT],
        GET_REPORT: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT, ROLES.OBSERVER],
        PRINT_LIST: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT],
        PRINT_REPORT: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT, ROLES.OBSERVER],
        EDIT: [ROLES.ADMIN],
    },
    IMPRESSIONS: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR],
    },
    USER: {
        ROUTE: [ROLES.ADMIN],
        SHARE: [ROLES.OWNER, ROLES.MODERATOR],
    },
    ACCOUNT: {
        ROUTE: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT],
        SECURITY: [ROLES.ADMIN, ROLES.OWNER, ROLES.MODERATOR, ROLES.AGENT],
        MEMBERS: [ROLES.OWNER],
        FUNDS: [ROLES.OWNER],
    },
    ADMIN: {
        ROUTE: [ROLES.ADMIN],
    },
}
